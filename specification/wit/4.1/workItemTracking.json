{
  "swagger": "2.0",
  "info": {
    "title": "WorkItemTracking",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "4.1-preview"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "x-ms-parameterized-host": {
    "hostTemplate": "{accountName}.visualstudio.com",
    "parameters": [
      {
        "name": "accountName",
        "description": "The name of the Visual Studio Team Services account.",
        "required": true,
        "type": "string",
        "in": "path"
      }
    ]
  },
  "x-ms-vss-area": "WorkItemTracking",
  "x-ms-vss-resource-area-id": "5264459e-e5e0-4bd8-b118-0985e68a4ec5",
  "basePath": "/",
  "tags": [
    {
      "name": "Artifact Link Types"
    },
    {
      "name": "Artifact Uri Query"
    },
    {
      "name": "Attachments",
      "description": "Create and get attachments associated with work items."
    },
    {
      "name": "Classification Nodes"
    },
    {
      "name": "Comments",
      "description": "Work item comments controller"
    },
    {
      "name": "Fields"
    },
    {
      "name": "Queries",
      "description": "The queries in a team project are organized in folders.\n\nA sample structure of queries and folders might appear as shown here.\n\n* **My Queries**\n* **Shared Queries**\n  * Feedback (Query)\n    * **Current Sprint**\n      * Blocked Tasks (Query)\n      * Open Impediments (Query)\n      * Test Cases (Query)\n      * Unfinished Work (Query)\n      * Work in Progress (Query)"
    },
    {
      "name": "Recyclebin",
      "description": "The controller that services request for Recycle bin"
    },
    {
      "name": "Revisions",
      "description": "The controller that services requests for Work Item Revisions"
    },
    {
      "name": "Templates"
    },
    {
      "name": "Updates",
      "description": "The controller that services the requests for Work Item Updates"
    },
    {
      "name": "Wiql",
      "description": "The WIQL API is used to run a query given the WIQL text or a saved query ID."
    },
    {
      "name": "Work Item Icons",
      "description": "Discover the list of work item icons and view individual icons."
    },
    {
      "name": "Work Item Links",
      "description": "This API provides access to all work item links in your project or collection and allows you to build a warehouse.\n\nThe response of the API contains a batch of work item links (\"values\"), a URL to the next batch of work item links (\"nextLink\") and a boolean that tells you whether you have read all currently available work item links (\"isLastBatch\").\n\nThe workflow for building your warehouse is as follows:\n  1. Make a request to the API without providing a watermark parameter\n  2. Process the work item links returned by the API\n  3. Persist \"nextLink\" and check \"isLastBatch\"\n    * If \"isLastBatch\" is true, pause for a period of time (varies depending on your target latency)\n  4. Make the next request using the URL from \"nextLink\"\n  5. Go to step 2"
    },
    {
      "name": "Work Item Relation Types"
    },
    {
      "name": "Work Item Revisions",
      "description": "This API provides access to all work item revisions in your project or collection and allows you to build a warehouse.\n\nThe response of the API contains a batch of work item revisions(\"values\"), a URL to the next batch of work item revisions(\"nextLink\") and a boolean that tells you whether you have read all currently available work item revisions(\"isLastBatch\").\n\nThe workflow for building your warehouse is as follows:\n1. Make a request to the API without providing a continuationToken parameter\n2. Process the work item revisions returned by the API\n3. Persist \"nextLink\" and check \"isLastBatch\"\n    * If \"isLastBatch\" is true, pause for a period of time(varies depending on your target latency)\n4. Make the next request using the URL from \"nextLink\"\n5. Go to step 2\n\n## Note\nThe results of this API are impacted when using Move Work Item and/or Change Work Item Type features in conjunction with \"project\" in the url and/or \"types\" in the query string.<br />\n - Project-scoped requests will only return work item revisions from the specified project.\n - Types-scoped requests will only return work item revisions of the specified type(s)\n\n## Sample Projects\n[C# Example](https://github.com/sferg-msft/vsts-wit-reporting-example)"
    },
    {
      "name": "Work Items",
      "description": "The controller that services CRUD request for Work Items"
    },
    {
      "name": "Work Item Transitions",
      "description": "Currently only for the single GetWorkItemNextStatesOnCheckinAction that returns the next state if the work item is checked in."
    },
    {
      "name": "Work Item Type Categories",
      "description": "The controller that services the requests for Work Item Type Categories."
    },
    {
      "name": "Work Item Types",
      "description": "The controller that services the requests for Work Item Types"
    },
    {
      "name": "Work Item Types Field",
      "description": "The controller that services the requests for Work Item Type Fields"
    },
    {
      "name": "Work Item Type States",
      "description": "The controller that services the requests for states of Work Item Types."
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/wit/artifactlinktypes": {
      "get": {
        "tags": [
          "Artifact Link Types"
        ],
        "x-ms-vss-resource": "artifactLinkTypes",
        "x-ms-vss-method": "GetWorkArtifactLinkTypes",
        "x-ms-preview": true,
        "description": "Get the list of work item tracking outbound artifact link types.",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkArtifactLink"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/artifactLinkTypes/GET_wit_artifactlinktypes.json"
            }
        }
      }
    },
    "/_apis/wit/artifacturiquery": {
      "post": {
        "tags": [
          "Artifact Uri Query"
        ],
        "x-ms-vss-resource": "artifactUriQuery",
        "x-ms-vss-method": "QueryWorkItemsForArtifactUris",
        "x-ms-preview": true,
        "description": "Queries work items linked to a given list of artifact URI.",
        "operationId": "Query",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Defines a list of artifact URI for querying work items.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactUriQuery"
            }
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ArtifactUriQueryResult"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "Query work items for artifacts": {
                "$ref": "./httpExamples/artifactUriQuery/POST__wit_artifacturiquery.json"
            }
        }
      }
    },
    "/_apis/wit/attachments": {
      "post": {
        "tags": [
          "Attachments"
        ],
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "CreateAttachment",
        "x-ms-preview": true,
        "description": "Uploads an attachment.",
        "operationId": "Create",
        "consumes": [
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Stream to upload",
            "required": true,
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          },
          {
            "in": "query",
            "name": "fileName",
            "description": "The name of the file",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "uploadType",
            "description": "Attachment upload type: Simple or Chunked",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "areaPath",
            "description": "Target project Area Path",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AttachmentReference"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
            "Upload a text file": {
                "$ref": "./httpExamples/attachments/POST__wit_attachments_fileName-_textFile_.json"
            },
            "Upload a binary file": {
                "$ref": "./httpExamples/attachments/POST__wit_attachments_fileName-_binaryFile_.json"
            },
            "Chunked Upload Step #1": {
                "$ref": "./httpExamples/attachments/POST_wit_attachments_fileName_chunked_register.json"
            },
            "Chunked Upload Step #2": {
                "$ref": "./httpExamples/attachments/POST_wit_attachments_fileName_chunked_content1.json"
            },
            "Chunked Upload Step #3": {
                "$ref": "./httpExamples/attachments/POST_wit_attachments_fileName_chunked_content2.json"
            }
        }
      }
    },
    "/_apis/wit/attachments/{id}": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "GetAttachment",
        "x-ms-preview": true,
        "description": "Downloads an attachment.",
        "operationId": "Get",
        "produces": [
          "application/octet-stream",
          "application/zip"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Attachment ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "fileName",
            "description": "Name of the file",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "Get Attachment Content": {
                "$ref": "./httpExamples/attachments/GET__wit_attachments_get_attachment_content.json"
            }
        }
      }
    },
    "/_apis/wit/workitemicons": {
      "get": {
        "tags": [
          "Work Item Icons"
        ],
        "x-ms-vss-resource": "workItemIcons",
        "x-ms-vss-method": "GetWorkItemIcons",
        "x-ms-preview": true,
        "description": "Get a list of all work item icons.",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemIcon"
              }
            }
         }
        },
        "x-ms-examples": {
            "Get work item icons": {
                "$ref": "./httpExamples/workItemIcons/GET__workitem_icons.json"
            }
        }
      }
    },
    "/_apis/wit/workitemicons/{icon}": {
      "get": {
        "tags": [
          "Work Item Icons"
        ],
        "x-ms-vss-resource": "workItemIcons",
        "x-ms-vss-method": "GetWorkItemIcon",
        "x-ms-preview": true,
        "description": "Get a work item icon given the friendly name and icon color.",
        "operationId": "Get",
        "produces": [
          "image/svg+xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "icon",
            "description": "The name of the icon",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "color",
            "description": "The 6-digit hex color for the icon",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "v",
            "description": "The version of the icon (used only for cache invalidation)",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemIcon"
            }
         }
        },
        "x-ms-examples": {
            "Get work item icon": {
                "$ref": "./httpExamples/workItemIcons/GET__workitem_icon.json"
            }
        }
      }
    },
    "/_apis/wit/workitemrelationtypes": {
      "get": {
        "tags": [
          "Work Item Relation Types"
        ],
        "x-ms-vss-resource": "workItemRelationTypes",
        "x-ms-vss-method": "GetRelationTypes",
        "x-ms-preview": true,
        "description": "Gets the work item relation types.",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemRelationType"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "Get the work item relation types": {
                "$ref": "./httpExamples/workItemRelationTypes/GET__relation_types.json"
            }
        }
      }
    },
    "/_apis/wit/workitemrelationtypes/{relation}": {
      "get": {
        "tags": [
          "Work Item Relation Types"
        ],
        "x-ms-vss-resource": "workItemRelationTypes",
        "x-ms-vss-method": "GetRelationType",
        "x-ms-preview": true,
        "description": "Gets the work item relation type definition.",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "relation",
            "description": "The relation name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemRelationType"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "Get the work item relation type": {
                "$ref": "./httpExamples/workItemRelationTypes/GET__relation_type.json"
            }
        }
      }
    },
    "/_apis/wit/workitems": {
      "get": {
        "tags": [
          "Work Items"
        ],
        "x-ms-vss-resource": "workItems",
        "x-ms-vss-method": "GetWorkItems",
        "x-ms-preview": true,
        "description": "Returns a list of work items.",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "The comma-separated list of requested work item ids",
            "required": true,
            "type": "string",
            "format": "array (int32)"
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma-separated list of requested fields",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "asOf",
            "description": "AsOf UTC date time string",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "The expand parameters for work item attributes",
            "required": false,
            "type": "string",
            "format": "WorkItemExpand"
          },
          {
            "in": "query",
            "name": "errorPolicy",
            "description": "The flag to control error policy in a bulk get work items request",
            "required": false,
            "type": "string",
            "format": "WorkItemErrorPolicy"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItem"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "Get list of work items": {
                "$ref": "./httpExamples/workItems/GET__wit_WorkItems_ids-_ids_.json"
            },
            "Get list of work items, all expanded": {
                "$ref": "./httpExamples/workItems/GET__wit_WorkItems_ids-_ids___expand-all.json"
            },
            "Get list of work items for specific fields": {
                "$ref": "./httpExamples/workItems/GET__wit_WorkItems_ids-_ids__fields-_columns_.json"
            },
            "Get list of work items as of specific datetime": {
                "$ref": "./httpExamples/workItems/GET__wit_WorkItems_ids-_ids__fields-_columns__asOf-_asof_.json"
            }
        }
      }
    },
    "/_apis/wit/workitems/{id}": {
      "delete": {
        "tags": [
          "Work Items"
        ],
        "x-ms-vss-resource": "workItems",
        "x-ms-vss-method": "DeleteWorkItem",
        "x-ms-preview": true,
        "description": "Deletes the specified work item and sends it to the Recycle Bin, so that it can be restored back, if required. Optionally, if the destroy parameter has been set to true, it destroys the work item permanently.",
        "operationId": "Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the work item to be deleted",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "destroy",
            "description": "Optional parameter, if set to true, the work item is deleted permanently",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemDelete"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/workItems/DELETE__wit_workitems_id_.json"
            }
        }
      },
      "get": {
        "tags": [
          "Work Items"
        ],
        "x-ms-vss-resource": "workItems",
        "x-ms-vss-method": "GetWorkItem",
        "x-ms-preview": true,
        "description": "Returns a single work item.",
        "operationId": "Get Work Item",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The work item id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma-separated list of requested fields",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "asOf",
            "description": "AsOf UTC date time string",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "The expand parameters for work item attributes",
            "required": false,
            "type": "string",
            "format": "WorkItemExpand"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "Get work item": {
                "$ref": "./httpExamples/workItems/GET__wit_WorkItems_id.json"
            }
        }
      },
      "patch": {
        "tags": [
          "Work Items"
        ],
        "x-ms-vss-resource": "workItems",
        "x-ms-vss-method": "UpdateWorkItem",
        "x-ms-preview": true,
        "description": "Updates a single work item.",
        "operationId": "Update",
        "consumes": [
          "application/json-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The JSON Patch document representing the update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id of the work item to update",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "validateOnly",
            "description": "Indicate if you only want to validate the changes without saving the work item",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "bypassRules",
            "description": "Do not enforce the work item type rules on this update",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "suppressNotifications",
            "description": "Do not fire any notifications for this change",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
            "Update a field": {
                "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_.json"
            },
            "Move work items (API Availability: Team Services only (not TFS))": {
                "$ref": "./httpExamples/workItems/PATCH__wit_workitems__bug1Id_.json"
            },
            "Change work item type (API Availability: Team Services only (not TFS))": {
                "$ref": "./httpExamples/workItems/PATCH__wit_workitems__bug1Id_2.json"
            },
            "Add a tag": {
                "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_9.json"
            },
            "Add a link": {
                "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_3.json"
            },
            "Update a link": {
                "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_4.json"
            },
            "Remove a link": {
                "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_5.json"
            },
            "Add an attachment": {
                "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_6.json"
            },
            "Remove an attachment": {
                "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_7.json"
            },
            "Add a hyperlink": {
                "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_8.json"
            },
            "Make an update bypassing rules": {
                "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId__bypassRules-true.json"
            }
        }
      }
    },
    "/_apis/wit/workItems/{id}/comments": {
      "get": {
        "tags": [
          "Comments"
        ],
        "x-ms-vss-resource": "comments",
        "x-ms-vss-method": "GetComments",
        "x-ms-preview": true,
        "description": "Gets the specified number of comments for a work item from the specified revision.",
        "operationId": "Get Comments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Work item id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "fromRevision",
            "description": "Revision from which comments are to be fetched",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "The number of comments to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Ascending or descending by revision id",
            "required": false,
            "type": "string",
            "format": "CommentSortOrder"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemComments"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "Get a page of comments": {
                "$ref": "./httpExamples/comments/GET__wit_workitems__taskId__comments_2.json"
            }
        }
      }
    },
    "/_apis/wit/workItems/{id}/comments/{revision}": {
      "get": {
        "tags": [
          "Comments"
        ],
        "x-ms-vss-resource": "comments",
        "x-ms-vss-method": "GetComment",
        "x-ms-preview": true,
        "description": "Gets a comment for a work item at the specified revision.",
        "operationId": "Get Comment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Work item id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "revision",
            "description": "Revision for which the comment need to be fetched",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemComment"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "Get a single comment": {
                "$ref": "./httpExamples/comments/GET__wit_workitems__taskId__comments_1.json"
            }
        }
      }
    },
    "/_apis/wit/workItems/{id}/revisions": {
      "get": {
        "tags": [
          "Revisions"
        ],
        "x-ms-vss-resource": "revisions",
        "x-ms-vss-method": "GetRevisions",
        "x-ms-preview": true,
        "description": "Returns the list of fully hydrated work item revisions, paged.",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$skip",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "WorkItemExpand"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItem"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "List work item revisions": {
                "$ref": "./httpExamples/revisions/GET__list_workitem_revisions.json"
            },
            "List work item revisions with paging": {
                "$ref": "./httpExamples/revisions/GET__list_workitem_revisions_paged.json"
            }
        }
      }
    },
    "/_apis/wit/workItems/{id}/revisions/{revisionNumber}": {
      "get": {
        "tags": [
          "Revisions"
        ],
        "x-ms-vss-resource": "revisions",
        "x-ms-vss-method": "GetRevision",
        "x-ms-preview": true,
        "description": "Returns a fully hydrated work item for the requested revision",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "revisionNumber",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "WorkItemExpand"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "Get work item revision": {
                "$ref": "./httpExamples/revisions/GET__workitem_revision.json"
            }
        }
      }
    },
    "/_apis/wit/workItems/{id}/updates": {
      "get": {
        "tags": [
          "Updates"
        ],
        "x-ms-vss-resource": "updates",
        "x-ms-vss-method": "GetUpdates",
        "x-ms-preview": true,
        "description": "Returns a the deltas between work item revisions",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$skip",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemUpdate"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "List of work item updates": {
                "$ref": "./httpExamples/updates/GET__list_of_workitem_updates.json"
            },
            "Paged list of work item updates": {
                "$ref": "./httpExamples/updates/GET__list_of_workitem_updates_paged.json"
            }
        }
      }
    },
    "/_apis/wit/workItems/{id}/updates/{updateNumber}": {
      "get": {
        "tags": [
          "Updates"
        ],
        "x-ms-vss-resource": "updates",
        "x-ms-vss-method": "GetUpdate",
        "x-ms-preview": true,
        "description": "Returns a single update for a work item",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "updateNumber",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemUpdate"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "work item update": {
                "$ref": "./httpExamples/updates/GET__work_item_update.json"
            }
        }
      }
    },
    "/_apis/wit/workitemtransitions": {
      "get": {
        "tags": [
          "Work Item Transitions"
        ],
        "x-ms-vss-resource": "workItemTransitions",
        "x-ms-vss-method": "GetWorkItemNextStatesOnCheckinAction",
        "x-ms-preview": true,
        "description": "Returns the next state on the given work item IDs.",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "list of work item ids",
            "required": true,
            "type": "string",
            "format": "array (int32)"
          },
          {
            "in": "query",
            "name": "action",
            "description": "possible actions. Currently only supports checkin",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemNextStateOnTransition"
              }
            }
         }
        }
      }
    },
    "/{project}/_apis/wit/classificationnodes": {
      "get": {
        "tags": [
          "Classification Nodes"
        ],
        "x-ms-vss-resource": "classificationNodes",
        "x-ms-vss-method": "GetRootNodes",
        "x-ms-preview": true,
        "description": "Gets root classification nodes under the project.",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$depth",
            "description": "Depth of children to fetch.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemClassificationNode"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "Get the root area tree": {
                "$ref": "./httpExamples/classificationNodes/GET__wit_classificationNodes_areas.json"
            },
            "Get the area tree with 2 levels of children": {
                "$ref": "./httpExamples/classificationNodes/GET__wit_classificationNodes_areas__depth-2.json"
            },
            "Get the root iteration tree": {
                "$ref": "./httpExamples/classificationNodes/GET__wit_classificationNodes_iterations.json"
            },
            "Get the iteration tree with 2 levels of children": {
                "$ref": "./httpExamples/classificationNodes/GET__wit_classificationNodes_iterations__depth-2.json"
            }
        }
      }
    },
    "/{project}/_apis/wit/classificationnodes/{structureGroup}/{path}": {
      "post": {
        "tags": [
          "Classification Nodes"
        ],
        "x-ms-vss-resource": "classificationNodes",
        "x-ms-vss-method": "CreateOrUpdateClassificationNode",
        "x-ms-preview": true,
        "description": "Create new or update an existing classification node.",
        "operationId": "Create Or Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Node to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemClassificationNode"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "structureGroup",
            "description": "Structure group of the classification node, area or iteration.",
            "required": true,
            "type": "string",
            "format": "TreeStructureGroup"
          },
          {
            "in": "path",
            "name": "path",
            "description": "Path of the classification node.",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemClassificationNode"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
            "Create an area": {
                "$ref": "./httpExamples/classificationNodes/POST__wit_classificationNodes_areas.json"
            },
            "Move an area node": {
                "$ref": "./httpExamples/classificationNodes/POST__wit_classificationNodes_areas__areaParent_.json"
            },
            "Create an iteration": {
                "$ref": "./httpExamples/classificationNodes/POST__wit_classificationNodes_iterations.json"
            },
            "Move an iteration node": {
                "$ref": "./httpExamples/classificationNodes/POST__wit_classificationNodes_iterations__iterationParent_.json"
            }
        }
      },
      "delete": {
        "tags": [
          "Classification Nodes"
        ],
        "x-ms-vss-resource": "classificationNodes",
        "x-ms-vss-method": "DeleteClassificationNode",
        "x-ms-preview": true,
        "description": "Delete an existing classification node.",
        "operationId": "Delete",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "structureGroup",
            "description": "Structure group of the classification node, area or iteration.",
            "required": true,
            "type": "string",
            "format": "TreeStructureGroup"
          },
          {
            "in": "path",
            "name": "path",
            "description": "Path of the classification node.",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$reclassifyId",
            "description": "Id of the target classification node for reclassification.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
            "Delete an area node": {
                "$ref": "./httpExamples/classificationNodes/DELETE__wit_classificationNodes_areas__areaParent___reclassifyId-_rootAreaId_.json"
            },
            "Delete an iteration node": {
                "$ref": "./httpExamples/classificationNodes/DELETE__wit_classificationNodes_iterations__iterationParent___reclassifyId-_rootIterationId_.json"
            }
        }
      },
      "get": {
        "tags": [
          "Classification Nodes"
        ],
        "x-ms-vss-resource": "classificationNodes",
        "x-ms-vss-method": "GetClassificationNode",
        "x-ms-preview": true,
        "description": "Gets the classification node for a given node path.",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "structureGroup",
            "description": "Structure group of the classification node, area or iteration.",
            "required": true,
            "type": "string",
            "format": "TreeStructureGroup"
          },
          {
            "in": "path",
            "name": "path",
            "description": "Path of the classification node.",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$depth",
            "description": "Depth of children to fetch.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemClassificationNode"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "Get an area": {
                "$ref": "./httpExamples/classificationNodes/GET__wit_classificationNodes_areas__areaPath_.json"
            },
            "Get an iteration": {
                "$ref": "./httpExamples/classificationNodes/GET__wit_classificationNodes_iterations__iterationPath_.json"
            }
        }
      },
      "patch": {
        "tags": [
          "Classification Nodes"
        ],
        "x-ms-vss-resource": "classificationNodes",
        "x-ms-vss-method": "UpdateClassificationNode",
        "x-ms-preview": true,
        "description": "Update an existing classification node.",
        "operationId": "Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Node to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemClassificationNode"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "structureGroup",
            "description": "Structure group of the classification node, area or iteration.",
            "required": true,
            "type": "string",
            "format": "TreeStructureGroup"
          },
          {
            "in": "path",
            "name": "path",
            "description": "Path of the classification node.",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemClassificationNode"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
            "Rename an area": {
                "$ref": "./httpExamples/classificationNodes/PATCH__wit_classificationNodes_areas__areaPath_.json"
            },
            "Rename an iteration": {
                "$ref": "./httpExamples/classificationNodes/PATCH__wit_classificationNodes_iterations__iterationPath_.json"
            },
            "Change an iteration's dates": {
                "$ref": "./httpExamples/classificationNodes/PATCH__wit_classificationNodes_iterations__iterationPathNew_.json"
            }
        }
      }
    },
    "/{project}/_apis/wit/fields": {
      "get": {
        "tags": [
          "Fields"
        ],
        "x-ms-vss-resource": "fields",
        "x-ms-vss-method": "GetFields",
        "x-ms-preview": true,
        "description": "Returns information for all fields.",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Use ExtensionFields to include extension fields, otherwise exclude them. Unless the feature flag for this parameter is enabled, extension fields are always included.",
            "required": false,
            "type": "string",
            "format": "GetFieldsExpand"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemField"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/fields/GET__wit_fields.json"
            }
        }
      }
    },
    "/{project}/_apis/wit/fields/{fieldNameOrRefName}": {
      "delete": {
        "tags": [
          "Fields"
        ],
        "x-ms-vss-resource": "fields",
        "x-ms-vss-method": "DeleteField",
        "x-ms-preview": true,
        "description": "Deletes the field.",
        "operationId": "Delete",
        "parameters": [
          {
            "in": "path",
            "name": "fieldNameOrRefName",
            "description": "Field simple name or reference name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        }
      },
      "get": {
        "tags": [
          "Fields"
        ],
        "x-ms-vss-resource": "fields",
        "x-ms-vss-method": "GetField",
        "x-ms-preview": true,
        "description": "Gets information on a specific field.",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fieldNameOrRefName",
            "description": "Field simple name or reference name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemField"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/fields/GET__wit_fields__fieldName_.json"
            }
        }
      },
      "patch": {
        "tags": [
          "Fields"
        ],
        "x-ms-vss-resource": "fields",
        "x-ms-vss-method": "UpdateField",
        "x-ms-preview": true,
        "description": "Updates the field.",
        "operationId": "Update",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New field definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemField"
            }
          },
          {
            "in": "path",
            "name": "fieldNameOrRefName",
            "description": "Field simple name or reference name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        }
      }
    },
    "/{project}/_apis/wit/queries": {
      "get": {
        "tags": [
          "Queries"
        ],
        "x-ms-vss-resource": "queries",
        "x-ms-vss-method": "GetQueries",
        "x-ms-preview": true,
        "description": "Gets the root queries and their children",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Include the query string (wiql), clauses, query result columns, and sort options in the results.",
            "required": false,
            "type": "string",
            "format": "QueryExpand"
          },
          {
            "in": "query",
            "name": "$depth",
            "description": "In the folder of queries, return child queries and folders to this depth.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$includeDeleted",
            "description": "Include deleted queries and folders",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryHierarchyItem"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/queries/GET__wit_queries__depth-1.json"
            },
            "Just the root query folders": {
                "$ref": "./httpExamples/queries/GET__wit_queries.json"
            },
            "With the query string and columns and sort options": {
                "$ref": "./httpExamples/queries/GET__wit_queries__depth-1__expand-all.json"
            },
            "Including deleted queries": {
                "$ref": "./httpExamples/queries/GET__wit_queries__depth-2__includeDeleted-true.json"
            }
        }
      }
    },
    "/{project}/_apis/wit/queries/{query}": {
      "post": {
        "tags": [
          "Queries"
        ],
        "x-ms-vss-resource": "queries",
        "x-ms-vss-method": "CreateQuery",
        "x-ms-preview": true,
        "description": "Creates a query, or moves a query.",
        "operationId": "Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The query to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryHierarchyItem"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "query",
            "description": "The parent path for the query to create.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryHierarchyItem"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
            "Create a query": {
                "$ref": "./httpExamples/queries/POST__wit_queries_Shared Queries__folderName_.json"
            },
            "Create a folder": {
                "$ref": "./httpExamples/queries/POST__wit_queries_Shared Queries.json"
            },
            "Move a query or folder": {
                "$ref": "./httpExamples/queries/POST__wit_queries_My Queries.json"
            }
        }
      },
      "delete": {
        "tags": [
          "Queries"
        ],
        "x-ms-vss-resource": "queries",
        "x-ms-vss-method": "DeleteQuery",
        "x-ms-preview": true,
        "description": "Delete a query or a folder",
        "operationId": "Delete",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "query",
            "description": "ID or path of the query or folder to delete.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
            "By ID": {
                "$ref": "./httpExamples/queries/DELETE__wit_queries__queryId_.json"
            },
            "By folder path": {
                "$ref": "./httpExamples/queries/DELETE__wit_queries_My Queries__folderNameNew_.json"
            },
            "Undelete a query or folder": {
                "$ref": "./httpExamples/queries/PATCH__wit_queries__folderId___undeleteDescendants-true.json"
            }
        }
      },
      "get": {
        "tags": [
          "Queries"
        ],
        "x-ms-vss-resource": "queries",
        "x-ms-vss-method": "GetQuery",
        "x-ms-preview": true,
        "description": "Retrieves an individual query and its children",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "query",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Include the query string (wiql), clauses, query result columns, and sort options in the results.",
            "required": false,
            "type": "string",
            "format": "QueryExpand"
          },
          {
            "in": "query",
            "name": "$depth",
            "description": "In the folder of queries, return child queries and folders to this depth.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$includeDeleted",
            "description": "Include deleted queries and folders",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryHierarchyItem"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "Query by ID": {
                "$ref": "./httpExamples/queries/GET__wit_queries__queryId_.json"
            },
            "Query by Name": {
                "$ref": "./httpExamples/queries/GET__wit_queries_Shared Queries__folderName___queryName_.json"
            },
            "Folder by ID": {
                "$ref": "./httpExamples/queries/GET__wit_queries__folderId_.json"
            },
            "Folder by Name": {
                "$ref": "./httpExamples/queries/GET__wit_queries_Shared Queries__folderName_.json"
            },
            "Deleted query by ID": {
                "$ref": "./httpExamples/queries/GET__wit_queries__queryId___includeDeleted-true.json"
            },
            "Flat query with expanded clauses": {
                "$ref": "./httpExamples/queries/GET__wit_queries__queryId___expand-clauses.json"
            },
            "Hierarchical query with expanded clauses": {
                "$ref": "./httpExamples/queries/GET__wit_queries__hierarchicalQueryId___expand-clauses.json"
            }
        }
      },
      "patch": {
        "tags": [
          "Queries"
        ],
        "x-ms-vss-resource": "queries",
        "x-ms-vss-method": "UpdateQuery",
        "x-ms-preview": true,
        "description": "Update a query or a folder. This allows you to update, rename and move queries and folders.",
        "operationId": "Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The query to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryHierarchyItem"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "query",
            "description": "The path for the query to update.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$undeleteDescendants",
            "description": "Undelete the children of this folder.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryHierarchyItem"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
            "Update a query": {
                "$ref": "./httpExamples/queries/PATCH__wit_queries_Shared Queries__folderName___queryNameNew_.json"
            },
            "Rename a query": {
                "$ref": "./httpExamples/queries/PATCH__wit_queries_Shared Queries__folderName_.json"
            },
            "Rename a folder": {
                "$ref": "./httpExamples/queries/PATCH__wit_queries_Shared Queries__folderName_.json"
            }
        }
      }
    },
    "/{project}/_apis/wit/recyclebin": {
      "get": {
        "tags": [
          "Recyclebin"
        ],
        "x-ms-vss-resource": "recyclebin",
        "x-ms-vss-method": "GetDeletedWorkItemReferences",
        "x-ms-preview": true,
        "description": "Gets a list of the IDs and the URLs of the deleted the work items in the Recycle Bin.",
        "operationId": "Get Deleted Work Item References",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemReference"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/recyclebin/GET__wit_recyclebin.json"
            }
        }
      }
    },
    "/{project}/_apis/wit/recyclebin/{id}": {
      "delete": {
        "tags": [
          "Recyclebin"
        ],
        "x-ms-vss-resource": "recyclebin",
        "x-ms-vss-method": "DestroyWorkItem",
        "x-ms-preview": true,
        "description": "Destroys the specified work item permanently from the Recycle Bin. This action can not be undone.",
        "operationId": "Destroy Work Item",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the work item to be destroyed permanently",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/recyclebin/DELETE__wit_recyclebin__id_.json"
            }
        }
      },
      "get": {
        "tags": [
          "Recyclebin"
        ],
        "x-ms-vss-resource": "recyclebin",
        "x-ms-vss-method": "GetDeletedWorkItem",
        "x-ms-preview": true,
        "description": "Gets a deleted work item from Recycle Bin.",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the work item to be returned",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemDelete"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/recyclebin/GET__wit_recyclebin__id_.json"
            }
        }
      },
      "patch": {
        "tags": [
          "Recyclebin"
        ],
        "x-ms-vss-resource": "recyclebin",
        "x-ms-vss-method": "RestoreWorkItem",
        "x-ms-preview": true,
        "description": "Restores the deleted work item from Recycle Bin.",
        "operationId": "Restore Work Item",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Paylod with instructions to update the IsDeleted flag to false",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemDeleteUpdate"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID of the work item to be restored",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemDelete"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
            "Restore a work item": {
                "$ref": "./httpExamples/recyclebin/PATCH__wit_recyclebin_restore.json"
            }
        }
      }
    },
    "/{project}/_apis/wit/reporting/workitemlinks": {
      "get": {
        "tags": [
          "Work Item Links"
        ],
        "x-ms-vss-resource": "workItemLinks",
        "x-ms-vss-method": "GetReportingLinks",
        "x-ms-preview": true,
        "description": "Get a batch of work item links",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "types",
            "description": "A list of types to filter the results to specific work item types. Omit this parameter to get work item links of all work item types.",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "Specifies the continuationToken to start the batch from. Omit this parameter to get the first batch of links.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "startDateTime",
            "description": "Date/time to use as a starting point for link changes. Only link changes that occurred after that date/time will be returned. Cannot be used in conjunction with 'watermark' parameter.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReportingWorkItemLinksBatch"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/workItemLinks/GET__wit_reporting_workItemLinks.json"
            }
        }
      }
    },
    "/{project}/_apis/wit/reporting/workitemrevisions": {
      "get": {
        "tags": [
          "Work Item Revisions"
        ],
        "x-ms-vss-resource": "workItemRevisions",
        "x-ms-vss-method": "ReadReportingRevisionsGet",
        "x-ms-preview": true,
        "description": "Get a batch of work item revisions with the option of including deleted items",
        "operationId": "Read Reporting Revisions Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "fields",
            "description": "A list of fields to return in work item revisions. Omit this parameter to get all reportable fields.",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "types",
            "description": "A list of types to filter the results to specific work item types. Omit this parameter to get work item revisions of all work item types.",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "Specifies the watermark to start the batch from. Omit this parameter to get the first batch of revisions.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "startDateTime",
            "description": "Date/time to use as a starting point for revisions, all revisions will occur after this date/time. Cannot be used in conjunction with 'watermark' parameter.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "includeIdentityRef",
            "description": "Return an identity reference instead of a string value for identity fields.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeDeleted",
            "description": "Specify if the deleted item should be returned.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeTagRef",
            "description": "Specify if the tag objects should be returned for System.Tags field.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeLatestOnly",
            "description": "Return only the latest revisions of work items, skipping all historical revisions",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Return all the fields in work item revisions, including long text fields which are not returned by default",
            "required": false,
            "type": "string",
            "format": "ReportingRevisionsExpand"
          },
          {
            "in": "query",
            "name": "includeDiscussionChangesOnly",
            "description": "Return only the those revisions of work items, where only history field was changed",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$maxPageSize",
            "description": "The maximum number of results to return in this batch",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReportingWorkItemRevisionsBatch"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "Get the first batch of work item revisions": {
                "$ref": "./httpExamples/workItemRevisions/GET__wit_reporting_workItemRevisions.json"
            },
            "Get a batch of work item revisions with identity references": {
                "$ref": "./httpExamples/workItemRevisions/GET__wit_reporting_workItemRevisions_includeIdentityRef-true_watermark-794.json"
            }
        }
      },
      "post": {
        "tags": [
          "Work Item Revisions"
        ],
        "x-ms-vss-resource": "workItemRevisions",
        "x-ms-vss-method": "ReadReportingRevisionsPost",
        "x-ms-preview": true,
        "description": "Get a batch of work item revisions. This request may be used if your list of fields is large enough that it may run the URL over the length limit.",
        "operationId": "Read Reporting Revisions Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "An object that contains request settings: field filter, type filter, identity format",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportingWorkItemRevisionsFilter"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "Specifies the watermark to start the batch from. Omit this parameter to get the first batch of revisions.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "startDateTime",
            "description": "Date/time to use as a starting point for revisions, all revisions will occur after this date/time. Cannot be used in conjunction with 'watermark' parameter.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "ReportingRevisionsExpand"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReportingWorkItemRevisionsBatch"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/workItemRevisions/POST__wit_reporting_workItemRevisions_watermark-794.json"
            }
        }
      }
    },
    "/{project}/_apis/wit/workitems/${type}": {
      "post": {
        "tags": [
          "Work Items"
        ],
        "x-ms-vss-resource": "workItems",
        "x-ms-vss-method": "CreateWorkItem",
        "x-ms-preview": true,
        "description": "Creates a single work item.",
        "operationId": "Create",
        "consumes": [
          "application/json-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The JSON Patch document representing the work item",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "type",
            "description": "The work item type of the work item to create",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "validateOnly",
            "description": "Indicate if you only want to validate the changes without saving the work item",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "bypassRules",
            "description": "Do not enforce the work item type rules on this update",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "suppressNotifications",
            "description": "Do not fire any notifications for this change",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
            "Create work item": {
                "$ref": "./httpExamples/workItems/POST__wit_workitems_create.json"
            }
        }
      },
      "get": {
        "tags": [
          "Work Items"
        ],
        "x-ms-vss-resource": "workItems",
        "x-ms-vss-method": "GetWorkItemTemplate",
        "x-ms-preview": true,
        "description": "Returns a single work item from a template.",
        "operationId": "Get Work Item Template",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "type",
            "description": "The work item type name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma-separated list of requested fields",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "asOf",
            "description": "AsOf UTC date time string",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "The expand parameters for work item attributes",
            "required": false,
            "type": "string",
            "format": "WorkItemExpand"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/workitemtypecategories": {
      "get": {
        "tags": [
          "Work Item Type Categories"
        ],
        "x-ms-vss-resource": "workItemTypeCategories",
        "x-ms-vss-method": "GetWorkItemTypeCategories",
        "x-ms-preview": true,
        "description": "Returns a the deltas between work item revisions.",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemTypeCategory"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/workItemTypeCategories/GET__wit_workItemTypeCategories.json"
            }
        }
      }
    },
    "/{project}/_apis/wit/workitemtypecategories/{category}": {
      "get": {
        "tags": [
          "Work Item Type Categories"
        ],
        "x-ms-vss-resource": "workItemTypeCategories",
        "x-ms-vss-method": "GetWorkItemTypeCategory",
        "x-ms-preview": true,
        "description": "Returns a the deltas between work item revisions.",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "category",
            "description": "The category name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTypeCategory"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "Get category by name": {
                "$ref": "./httpExamples/workItemTypeCategories/GET__wit_workItemTypeCategories__categoryName_.json"
            }
        }
      }
    },
    "/{project}/_apis/wit/workitemtypes": {
      "get": {
        "tags": [
          "Work Item Types"
        ],
        "x-ms-vss-resource": "workItemTypes",
        "x-ms-vss-method": "GetWorkItemTypes",
        "x-ms-preview": true,
        "description": "Returns the list of work item types",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemType"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/workItemTypes/GET__wit_workItemTypes.json"
            }
        }
      }
    },
    "/{project}/_apis/wit/workitemtypes/{type}": {
      "get": {
        "tags": [
          "Work Item Types"
        ],
        "x-ms-vss-resource": "workItemTypes",
        "x-ms-vss-method": "GetWorkItemType",
        "x-ms-preview": true,
        "description": "Returns a work item type definition.",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "type",
            "description": "Work item type name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemType"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/workItemTypes/GET__wit_workItemTypes_Bug.json"
            }
        }
      }
    },
    "/{project}/_apis/wit/workitemtypes/{type}/fields/{field}": {
      "get": {
        "tags": [
          "Work Item Types Field"
        ],
        "x-ms-vss-resource": "workItemTypesField",
        "x-ms-vss-method": "GetDependentFields",
        "x-ms-preview": true,
        "description": "Returns the dependent fields for the corresponding workitem type and fieldname.",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "type",
            "description": "The work item type name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "field",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FieldDependentRule"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "Get the work item relation types": {
                "$ref": "./httpExamples/workItemTypesField/GET__dependent_fields.json"
            }
        }
      }
    },
    "/{project}/_apis/wit/workitemtypes/{type}/states": {
      "get": {
        "tags": [
          "Work Item Type States"
        ],
        "x-ms-vss-resource": "workItemTypeStates",
        "x-ms-vss-method": "GetWorkItemTypeStates",
        "x-ms-preview": true,
        "description": "Returns the state names and colors for a work item type.",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "type",
            "description": "The state name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemStateColor"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "Get work item type states": {
                "$ref": "./httpExamples/workItemTypeStates/GET__workitem_type_states.json"
            }
        }
      }
    },
    "/{project}/{team}/_apis/wit/templates": {
      "post": {
        "tags": [
          "Templates"
        ],
        "x-ms-vss-resource": "templates",
        "x-ms-vss-method": "CreateTemplate",
        "x-ms-preview": true,
        "description": "Creates a template",
        "operationId": "Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Template contents",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemTemplate"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTemplate"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Templates"
        ],
        "x-ms-vss-resource": "templates",
        "x-ms-vss-method": "GetTemplates",
        "x-ms-preview": true,
        "description": "Gets template",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workitemtypename",
            "description": "Optional, When specified returns templates for given Work item type.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemTemplateReference"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/wit/templates/{templateId}": {
      "delete": {
        "tags": [
          "Templates"
        ],
        "x-ms-vss-resource": "templates",
        "x-ms-vss-method": "DeleteTemplate",
        "x-ms-preview": true,
        "description": "Deletes the template with given id",
        "operationId": "Delete",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "templateId",
            "description": "Template id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Templates"
        ],
        "x-ms-vss-resource": "templates",
        "x-ms-vss-method": "GetTemplate",
        "x-ms-preview": true,
        "description": "Gets the template with specified id",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "templateId",
            "description": "Template Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTemplate"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Templates"
        ],
        "x-ms-vss-resource": "templates",
        "x-ms-vss-method": "ReplaceTemplate",
        "x-ms-preview": true,
        "description": "Replace template contents",
        "operationId": "Replace Template",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Template contents to replace with",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemTemplate"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "templateId",
            "description": "Template id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTemplate"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/wit/wiql": {
      "post": {
        "tags": [
          "Wiql"
        ],
        "x-ms-vss-resource": "wiql",
        "x-ms-vss-method": "QueryByWiql",
        "x-ms-preview": true,
        "description": "Gets the results of the query given its WIQL.",
        "operationId": "Query By Wiql",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The query containing the WIQL.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Wiql"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "timePrecision",
            "description": "Whether or not to use time precision.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "The max number of results to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemQueryResult"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/wiql/POST__wit_wiql.json"
            }
        }
      }
    },
    "/{project}/{team}/_apis/wit/wiql/{id}": {
      "head": {
        "tags": [
          "Wiql"
        ],
        "x-ms-vss-resource": "wiql",
        "x-ms-vss-method": "QueryById",
        "x-ms-preview": true,
        "description": "Gets the results of the query given the query ID.",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The query ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "timePrecision",
            "description": "Whether or not to use time precision.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
         }
        },
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/wiql/GET__wit_wiql__queryId_.json"
            }
        }
      },
      "get": {
        "tags": [
          "Wiql"
        ],
        "x-ms-vss-resource": "wiql",
        "x-ms-vss-method": "QueryById",
        "x-ms-preview": true,
        "description": "Gets the results of the query given the query ID.",
        "operationId": "Query By Id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The query ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "timePrecision",
            "description": "Whether or not to use time precision.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemQueryResult"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/wiql/GET__wit_wiql__queryId_.json"
            }
        }
      }
    }
  },
  "definitions": {
    "AccountMyWorkResult": {
      "description": "",
      "type": "object",
      "properties": {
        "querySizeLimitExceeded": {
          "description": "True, when length of WorkItemDetails is same as the limit",
          "type": "boolean"
        },
        "workItemDetails": {
          "description": "WorkItem Details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountWorkWorkItemModel"
          }
        }
      }
    },
    "AccountRecentActivityWorkItemModel": {
      "description": "Represents Work Item Recent Activity",
      "type": "object",
      "properties": {
        "activityDate": {
          "description": "Date of the last Activity by the user",
          "type": "string",
          "format": "date-time"
        },
        "activityType": {
          "description": "Type of the activity",
          "enum": [
            "visited",
            "edited",
            "deleted",
            "restored"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.WorkItemRecentActivityType"
          }
        },
        "assignedTo": {
          "description": "Assigned To",
          "type": "string"
        },
        "changedDate": {
          "description": "Last changed date of the work item",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "Work Item Id",
          "type": "integer",
          "format": "int32"
        },
        "identityId": {
          "description": "TeamFoundationId of the user this activity belongs to",
          "type": "string",
          "format": "uuid"
        },
        "state": {
          "description": "State of the work item",
          "type": "string"
        },
        "teamProject": {
          "description": "Team project the work item belongs to",
          "type": "string"
        },
        "title": {
          "description": "Title of the work item",
          "type": "string"
        },
        "workItemType": {
          "description": "Type of Work Item",
          "type": "string"
        }
      }
    },
    "AccountRecentMentionWorkItemModel": {
      "description": "Represents Recent Mention Work Item",
      "type": "object",
      "properties": {
        "assignedTo": {
          "description": "Assigned To",
          "type": "string"
        },
        "id": {
          "description": "Work Item Id",
          "type": "integer",
          "format": "int32"
        },
        "mentionedDateField": {
          "description": "Lastest date that the user were mentioned",
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "description": "State of the work item",
          "type": "string"
        },
        "teamProject": {
          "description": "Team project the work item belongs to",
          "type": "string"
        },
        "title": {
          "description": "Title of the work item",
          "type": "string"
        },
        "workItemType": {
          "description": "Type of Work Item",
          "type": "string"
        }
      }
    },
    "AccountWorkWorkItemModel": {
      "description": "",
      "type": "object",
      "properties": {
        "assignedTo": {
          "type": "string"
        },
        "changedDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "type": "string"
        },
        "teamProject": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "workItemType": {
          "type": "string"
        }
      }
    },
    "ArtifactUriQuery": {
      "description": "Contains criteria for querying work items based on artifact URI.",
      "type": "object",
      "properties": {
        "artifactUris": {
          "description": "List of artifact URIs to use for querying work items.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ArtifactUriQueryResult": {
      "description": "Defines result of artifact URI query on work items. Contains mapping of work item IDs to artifact URI.",
      "type": "object",
      "properties": {
        "artifactUrisQueryResult": {
          "description": "A Dictionary that maps a list of work item references to the given list of artifact URI.",
          "type": "object",
          "additionalProperties": {
            "type": "array"
          }
        }
      }
    },
    "AttachmentReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "FieldDependentRule": {
      "description": "Describes a list of dependent fields for a rule.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "dependentFields": {
          "description": "The dependent fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemFieldReference"
          }
        }
      }
    },
    "FieldsToEvaluate": {
      "description": "Describes a set fields for rule evaluation.",
      "type": "object",
      "properties": {
        "fields": {
          "description": "List of fields to evaluate.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fieldUpdates": {
          "description": "Updated field values to evaluate.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "fieldValues": {
          "description": "Initial field values.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "rulesFrom": {
          "description": "URL of the work item type for which the rules need to be executed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IdentityRef": {
      "description": "",
      "type": "object",
      "properties": {
        "directoryAlias": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "isAadIdentity": {
          "type": "boolean"
        },
        "isContainer": {
          "type": "boolean"
        },
        "profileUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "IdentityReference": {
      "description": "Describes a reference to an identity.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IdentityRef"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Legacy back-compat property. This has been the WIT specific value from Constants. Will be hidden (but exists) on the client unless they are targeting the newest version",
          "type": "string"
        }
      }
    },
    "JsonPatchDocument": {
      "description": "The JSON model for JSON Patch Operations",
      "type": "object",
      "allOf": [
        {
          "type": "array",
          "items": {
          }
        }
      ],
      "properties": {
      }
    },
    "JsonPatchOperation": {
      "description": "The JSON model for a JSON Patch operation",
      "type": "object",
      "properties": {
        "from": {
          "description": "The path to copy from for the Move/Copy operation.",
          "type": "string"
        },
        "op": {
          "description": "The patch operation",
          "enum": [
            "add",
            "remove",
            "replace",
            "move",
            "copy",
            "test"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.WebApi.Patch.Operation"
          }
        },
        "path": {
          "description": "The path for the operation",
          "type": "string"
        },
        "value": {
          "description": "The value for the operation. This is either a primitive or a JToken.",
          "type": "object"
        }
      }
    },
    "Link": {
      "description": "Link description.",
      "type": "object",
      "properties": {
        "attributes": {
          "description": "Collection of link attributes.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "rel": {
          "description": "Relation type.",
          "type": "string"
        },
        "url": {
          "description": "Link url.",
          "type": "string"
        }
      }
    },
    "ProjectWorkItemStateColors": {
      "description": "Project work item type state colors",
      "type": "object",
      "properties": {
        "projectName": {
          "description": "Project name",
          "readOnly": true,
          "type": "string"
        },
        "workItemTypeStateColors": {
          "description": "State colors for all work item type in a project",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemTypeStateColors"
          }
        }
      }
    },
    "ProvisioningResult": {
      "description": "Result of an update work item type XML update operation.",
      "type": "object",
      "properties": {
        "provisioningImportEvents": {
          "description": "Details about of the provisioning import events.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "QueryHierarchyItem": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryHierarchyItem"
          }
        },
        "clauses": {
          "$ref": "#/definitions/WorkItemQueryClause"
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemFieldReference"
          }
        },
        "createdBy": {
          "$ref": "#/definitions/IdentityReference"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "filterOptions": {
          "enum": [
            "workItems",
            "linksOneHopMustContain",
            "linksOneHopMayContain",
            "linksOneHopDoesNotContain",
            "linksRecursiveMustContain",
            "linksRecursiveMayContain",
            "linksRecursiveDoesNotContain"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.LinkQueryMode"
          }
        },
        "hasChildren": {
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "isFolder": {
          "type": "boolean"
        },
        "isInvalidSyntax": {
          "type": "boolean"
        },
        "isPublic": {
          "type": "boolean"
        },
        "lastExecutedBy": {
          "$ref": "#/definitions/IdentityReference"
        },
        "lastExecutedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/IdentityReference"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "linkClauses": {
          "$ref": "#/definitions/WorkItemQueryClause"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "queryType": {
          "enum": [
            "flat",
            "tree",
            "oneHop"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.QueryType"
          }
        },
        "sortColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemQuerySortColumn"
          }
        },
        "sourceClauses": {
          "$ref": "#/definitions/WorkItemQueryClause"
        },
        "targetClauses": {
          "$ref": "#/definitions/WorkItemQueryClause"
        },
        "wiql": {
          "type": "string"
        }
      }
    },
    "QueryHierarchyItemsResult": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "hasMore": {
          "type": "boolean"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryHierarchyItem"
          }
        }
      }
    },
    "ReferenceLinks": {
      "description": "The class to represent a collection of REST reference links.",
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ReportingWorkItemLink": {
      "description": "",
      "type": "object",
      "properties": {
        "changedBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "changedDate": {
          "type": "string",
          "format": "date-time"
        },
        "changedOperation": {
          "enum": [
            "create",
            "remove"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.LinkChangeType"
          }
        },
        "comment": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "linkType": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        },
        "sourceId": {
          "type": "integer",
          "format": "int32"
        },
        "targetId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReportingWorkItemLinksBatch": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StreamedBatch"
        }
      ],
      "properties": {
      }
    },
    "ReportingWorkItemRevisionsBatch": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StreamedBatch"
        }
      ],
      "properties": {
      }
    },
    "ReportingWorkItemRevisionsFilter": {
      "description": "",
      "type": "object",
      "properties": {
        "fields": {
          "description": "A list of fields to return in work item revisions. Omit this parameter to get all reportable fields.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeDeleted": {
          "description": "Include deleted work item in the result.",
          "type": "boolean"
        },
        "includeIdentityRef": {
          "description": "Return an identity reference instead of a string value for identity fields.",
          "type": "boolean"
        },
        "includeLatestOnly": {
          "description": "Include only the latest version of a work item, skipping over all previous revisions of the work item.",
          "type": "boolean"
        },
        "includeTagRef": {
          "description": "Include tag reference instead of string value for System.Tags field",
          "type": "boolean"
        },
        "types": {
          "description": "A list of types to filter the results to specific work item types. Omit this parameter to get work item revisions of all work item types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StreamedBatch": {
      "description": "",
      "type": "object",
      "properties": {
        "continuationToken": {
          "type": "string"
        },
        "isLastBatch": {
          "type": "boolean"
        },
        "nextLink": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "T"
          }
        }
      }
    },
    "TeamContext": {
      "description": "The Team Context for an operation.",
      "type": "object",
      "properties": {
        "project": {
          "description": "The team project Id or name.  Ignored if ProjectId is set.",
          "type": "string"
        },
        "projectId": {
          "description": "The Team Project ID.  Required if Project is not set.",
          "type": "string",
          "format": "uuid"
        },
        "team": {
          "description": "The Team Id or name.  Ignored if TeamId is set.",
          "type": "string"
        },
        "teamId": {
          "description": "The Team Id",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialized collections as a single JSON object on the wire, to avoid serializing JSON arrays directly to the client, which can be a security hole",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Wiql": {
      "description": "",
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        }
      }
    },
    "WorkArtifactLink": {
      "description": "A work artifact link describes an outbound artifact link type.",
      "type": "object",
      "properties": {
        "artifactType": {
          "description": "Target artifact type.",
          "type": "string"
        },
        "linkType": {
          "description": "Outbound link type.",
          "type": "string"
        },
        "toolType": {
          "description": "Target tool type.",
          "type": "string"
        }
      }
    },
    "WorkItem": {
      "description": "Describes a work item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "fields": {
          "description": "Map of field and values for the work item.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "id": {
          "description": "The work item ID.",
          "type": "integer",
          "format": "int32"
        },
        "relations": {
          "description": "Relations of the work item.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemRelation"
          }
        },
        "rev": {
          "description": "Revision number of the work item.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WorkItemClassificationNode": {
      "description": "Defines a classification node for work item tracking.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "attributes": {
          "description": "Dictionary that has node attributes like start/finish date for iteration nodes.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "children": {
          "description": "List of child nodes fetched.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemClassificationNode"
          }
        },
        "hasChildren": {
          "description": "Flag that indicates if the classification node has any child nodes.",
          "type": "boolean"
        },
        "id": {
          "description": "Integer ID of the classification node.",
          "type": "integer",
          "format": "int32"
        },
        "identifier": {
          "description": "GUID ID of the classification node.",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Name of the classification node.",
          "type": "string"
        },
        "structureType": {
          "description": "Node structure type.",
          "enum": [
            "area",
            "iteration"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.TreeNodeStructureType"
          }
        }
      }
    },
    "WorkItemComment": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "revisedBy": {
          "$ref": "#/definitions/IdentityReference"
        },
        "revisedDate": {
          "type": "string",
          "format": "date-time"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "WorkItemComments": {
      "description": "Comment results container.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "Comments collection.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemComment"
          }
        },
        "count": {
          "description": "The count of comments.",
          "type": "integer",
          "format": "int32"
        },
        "fromRevisionCount": {
          "description": "Count of comments from the revision.",
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "description": "Total count of comments.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WorkItemDelete": {
      "description": "Full deleted work item object. Includes the work item itself.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemDeleteReference"
        }
      ],
      "properties": {
        "resource": {
          "description": "The work item object that was deleted.",
          "$ref": "#/definitions/WorkItem"
        }
      }
    },
    "WorkItemDeleteReference": {
      "description": "Reference to a deleted work item.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The HTTP status code for work item operation in a batch request.",
          "type": "integer",
          "format": "int32"
        },
        "deletedBy": {
          "description": "The user who deleted the work item type.",
          "type": "string"
        },
        "deletedDate": {
          "description": "The work item deletion date.",
          "type": "string"
        },
        "id": {
          "description": "Work item ID.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "The exception message for work item operation in a batch request.",
          "type": "string"
        },
        "name": {
          "description": "Name or title of the work item.",
          "type": "string"
        },
        "project": {
          "description": "Parent project of the deleted work item.",
          "type": "string"
        },
        "type": {
          "description": "Type of work item.",
          "type": "string"
        },
        "url": {
          "description": "REST API URL of the resource",
          "type": "string"
        }
      }
    },
    "WorkItemDeleteUpdate": {
      "description": "Describes an update request for a deleted work item.",
      "type": "object",
      "properties": {
        "isDeleted": {
          "description": "Sets a value indicating whether this work item is deleted.",
          "type": "boolean"
        }
      }
    },
    "WorkItemField": {
      "description": "Describes a field on a work item and it's properties specific to that work item type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "description": {
          "description": "The description of the field.",
          "type": "string"
        },
        "isIdentity": {
          "description": "Indicates whether this field is an identity field.",
          "type": "boolean"
        },
        "isPicklist": {
          "description": "Indicates whether this instance is picklist.",
          "type": "boolean"
        },
        "isPicklistSuggested": {
          "description": "Indicates whether this instance is a suggested picklist .",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the field.",
          "type": "string"
        },
        "readOnly": {
          "description": "Indicates whether the field is [read only].",
          "type": "boolean"
        },
        "referenceName": {
          "description": "The reference name of the field.",
          "type": "string"
        },
        "supportedOperations": {
          "description": "The supported operations on this field.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemFieldOperation"
          }
        },
        "type": {
          "description": "The type of the field.",
          "enum": [
            "string",
            "integer",
            "dateTime",
            "plainText",
            "html",
            "treePath",
            "history",
            "double",
            "guid",
            "boolean",
            "identity",
            "picklistString",
            "picklistInteger",
            "picklistDouble"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.FieldType"
          }
        },
        "usage": {
          "description": "The usage of the field.",
          "enum": [
            "none",
            "workItem",
            "workItemLink",
            "tree",
            "workItemTypeExtension"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.FieldUsage"
          }
        }
      }
    },
    "WorkItemFieldOperation": {
      "description": "Describes a work item field operation.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the operation.",
          "type": "string"
        },
        "referenceName": {
          "description": "Reference name of the operation.",
          "type": "string"
        }
      }
    },
    "WorkItemFieldReference": {
      "description": "Reference to a field in a work item",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the field.",
          "type": "string"
        },
        "referenceName": {
          "description": "The reference name of the field.",
          "type": "string"
        },
        "url": {
          "description": "The REST URL of the resource.",
          "type": "string"
        }
      }
    },
    "WorkItemFieldUpdate": {
      "description": "Describes an update to a work item field.",
      "type": "object",
      "properties": {
        "newValue": {
          "description": "The new value of the field.",
          "type": "object"
        },
        "oldValue": {
          "description": "The old value of the field.",
          "type": "object"
        }
      }
    },
    "WorkItemHistory": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "rev": {
          "type": "integer",
          "format": "int32"
        },
        "revisedBy": {
          "$ref": "#/definitions/IdentityReference"
        },
        "revisedDate": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "WorkItemIcon": {
      "description": "Reference to a work item icon.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier of the icon.",
          "type": "string"
        },
        "url": {
          "description": "The REST URL of the resource.",
          "type": "string"
        }
      }
    },
    "WorkItemLink": {
      "description": "",
      "type": "object",
      "properties": {
        "rel": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/WorkItemReference"
        },
        "target": {
          "$ref": "#/definitions/WorkItemReference"
        }
      }
    },
    "WorkItemNextStateOnTransition": {
      "description": "Describes the next state for a work item.",
      "type": "object",
      "properties": {
        "errorCode": {
          "description": "Error code if there is no next state transition possible.",
          "type": "string"
        },
        "id": {
          "description": "Work item ID.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "Error message if there is no next state transition possible.",
          "type": "string"
        },
        "stateOnTransition": {
          "description": "Name of the next state on transition.",
          "type": "string"
        }
      }
    },
    "WorkItemQueryClause": {
      "description": "",
      "type": "object",
      "properties": {
        "clauses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemQueryClause"
          }
        },
        "field": {
          "$ref": "#/definitions/WorkItemFieldReference"
        },
        "fieldValue": {
          "$ref": "#/definitions/WorkItemFieldReference"
        },
        "isFieldValue": {
          "type": "boolean"
        },
        "logicalOperator": {
          "enum": [
            "nONE",
            "aND",
            "oR"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.LogicalOperation"
          }
        },
        "operator": {
          "$ref": "#/definitions/WorkItemFieldOperation"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "WorkItemQueryResult": {
      "description": "",
      "type": "object",
      "properties": {
        "asOf": {
          "type": "string",
          "format": "date-time"
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemFieldReference"
          }
        },
        "queryResultType": {
          "enum": [
            "workItem",
            "workItemLink"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.QueryResultType"
          }
        },
        "queryType": {
          "enum": [
            "flat",
            "tree",
            "oneHop"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.QueryType"
          }
        },
        "sortColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemQuerySortColumn"
          }
        },
        "workItemRelations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemLink"
          }
        },
        "workItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemReference"
          }
        }
      }
    },
    "WorkItemQuerySortColumn": {
      "description": "",
      "type": "object",
      "properties": {
        "descending": {
          "type": "boolean"
        },
        "field": {
          "$ref": "#/definitions/WorkItemFieldReference"
        }
      }
    },
    "WorkItemReference": {
      "description": "Contains reference to a work item.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Work item ID.",
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "description": "REST API URL of the resource",
          "type": "string"
        }
      }
    },
    "WorkItemRelation": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Link"
        }
      ],
      "properties": {
      }
    },
    "WorkItemRelationType": {
      "description": "Represents the work item type relatiion type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingReference"
        }
      ],
      "properties": {
        "attributes": {
          "description": "The collection of relation type attributes.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "WorkItemRelationUpdates": {
      "description": "Descrives updates to a work item's relations.",
      "type": "object",
      "properties": {
        "added": {
          "description": "List of newly added relations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemRelation"
          }
        },
        "removed": {
          "description": "List of removed relations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemRelation"
          }
        },
        "updated": {
          "description": "List of updated relations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemRelation"
          }
        }
      }
    },
    "WorkItemStateColor": {
      "description": "Work item type state name and color pair",
      "type": "object",
      "properties": {
        "color": {
          "description": "Color value",
          "type": "string"
        },
        "name": {
          "description": "Work item type state name",
          "type": "string"
        }
      }
    },
    "WorkItemStateTransition": {
      "description": "Describes a state transition in a work item.",
      "type": "object",
      "properties": {
        "actions": {
          "description": "Gets a list of actions needed to transition to that state.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "to": {
          "description": "Name of the next state.",
          "type": "string"
        }
      }
    },
    "WorkItemTemplate": {
      "description": "Describes a work item template.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTemplateReference"
        }
      ],
      "properties": {
        "fields": {
          "description": "Mapping of field and its templated value.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "WorkItemTemplateReference": {
      "description": "Describes a shallow reference to a work item template.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "description": {
          "description": "The description of the work item template.",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the work item template.",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "The name of the work item template.",
          "type": "string"
        },
        "workItemTypeName": {
          "description": "The name of the work item type.",
          "type": "string"
        }
      }
    },
    "WorkItemTrackingReference": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "name": {
          "description": "The name.",
          "type": "string"
        },
        "referenceName": {
          "description": "The reference name.",
          "type": "string"
        }
      }
    },
    "WorkItemTrackingResource": {
      "description": "Base class for WIT REST resources.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResourceReference"
        }
      ],
      "properties": {
        "_links": {
          "description": "Link references to related REST resources.",
          "$ref": "#/definitions/ReferenceLinks"
        }
      }
    },
    "WorkItemTrackingResourceReference": {
      "description": "Base class for work item tracking resource references.",
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "WorkItemType": {
      "description": "Describes a work item type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "color": {
          "description": "The color.",
          "type": "string"
        },
        "description": {
          "description": "The description of the work item type.",
          "type": "string"
        },
        "fieldInstances": {
          "description": "The fields that exist on the work item type.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemTypeFieldInstance"
          }
        },
        "fields": {
          "description": "The fields that exist on the work item type.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemTypeFieldInstance"
          }
        },
        "icon": {
          "description": "The icon of the work item type.",
          "$ref": "#/definitions/WorkItemIcon"
        },
        "name": {
          "description": "Gets the name of the work item type.",
          "type": "string"
        },
        "referenceName": {
          "description": "The reference name of the work item type.",
          "type": "string"
        },
        "transitions": {
          "description": "Gets the various state transition mappings in the work item type.",
          "type": "object",
          "additionalProperties": {
            "type": "array"
          }
        },
        "xmlForm": {
          "description": "The XML form.",
          "type": "string"
        }
      }
    },
    "WorkItemTypeCategory": {
      "description": "Describes a work item type category.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "defaultWorkItemType": {
          "description": "Gets or sets the default type of the work item.",
          "$ref": "#/definitions/WorkItemTypeReference"
        },
        "name": {
          "description": "The name of the category.",
          "type": "string"
        },
        "referenceName": {
          "description": "The reference name of the category.",
          "type": "string"
        },
        "workItemTypes": {
          "description": "The work item types that belond to the category.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemTypeReference"
          }
        }
      }
    },
    "WorkItemTypeColor": {
      "description": "Describes a work item type's colors.",
      "type": "object",
      "properties": {
        "primaryColor": {
          "description": "Gets or sets the color of the primary.",
          "type": "string"
        },
        "secondaryColor": {
          "description": "Gets or sets the color of the secondary.",
          "type": "string"
        },
        "workItemTypeName": {
          "description": "The name of the work item type.",
          "type": "string"
        }
      }
    },
    "WorkItemTypeColorAndIcon": {
      "description": "Describes work item type nam, its icon and color.",
      "type": "object",
      "properties": {
        "color": {
          "description": "The color of the work item type in hex format.",
          "type": "string"
        },
        "icon": {
          "description": "Tthe work item type icon.",
          "type": "string"
        },
        "workItemTypeName": {
          "description": "The name of the work item type.",
          "type": "string"
        }
      }
    },
    "WorkItemTypeFieldInstance": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemFieldReference"
        }
      ],
      "properties": {
        "alwaysRequired": {
          "description": "Indicates whether field value is always required.",
          "type": "boolean"
        },
        "helpText": {
          "description": "Gets the help text for the field.",
          "type": "string"
        }
      }
    },
    "WorkItemTypeReference": {
      "description": "Reference to a work item type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResourceReference"
        }
      ],
      "properties": {
        "name": {
          "description": "Name of the work item type.",
          "type": "string"
        }
      }
    },
    "WorkItemTypeStateColors": {
      "description": "State colors for a work item type",
      "type": "object",
      "properties": {
        "stateColors": {
          "description": "Work item type state colors",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemStateColor"
          }
        },
        "workItemTypeName": {
          "description": "Work item type name",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "WorkItemTypeTemplate": {
      "description": "Describes a work item type template.",
      "type": "object",
      "properties": {
        "template": {
          "description": "XML template in string format.",
          "type": "string"
        }
      }
    },
    "WorkItemTypeTemplateUpdateModel": {
      "description": "Describes a update work item type template request body.",
      "type": "object",
      "properties": {
        "actionType": {
          "description": "Describes the type of the action for the update request.",
          "enum": [
            "import",
            "validate"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.ProvisioningActionType"
          }
        },
        "methodology": {
          "description": "Methodology to which the template belongs, eg. Agile, Scrum, CMMI.",
          "type": "string"
        },
        "template": {
          "description": "String representation of the work item type template.",
          "type": "string"
        },
        "templateType": {
          "description": "The type of the template described in the request body.",
          "enum": [
            "workItemType",
            "globalWorkflow"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.TemplateType"
          }
        }
      }
    },
    "WorkItemUpdate": {
      "description": "Describes an update to a work item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "fields": {
          "description": "List of updates to fields.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/WorkItemFieldUpdate"
          }
        },
        "id": {
          "description": "ID of update.",
          "type": "integer",
          "format": "int32"
        },
        "relations": {
          "description": "List of updates to relations.",
          "$ref": "#/definitions/WorkItemRelationUpdates"
        },
        "rev": {
          "description": "The revision number of work item update.",
          "type": "integer",
          "format": "int32"
        },
        "revisedBy": {
          "description": "Identity for the work item update.",
          "$ref": "#/definitions/IdentityReference"
        },
        "revisedDate": {
          "description": "The work item updates revision date.",
          "type": "string",
          "format": "date-time"
        },
        "workItemId": {
          "description": "The work item ID.",
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '4.1-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     },
     "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.work": "Grants the ability to read work items, queries, boards, area and iterations paths, and other work item tracking related metadata. Also grants the ability to execute queries and to receive notifications about work item events via service hooks.",
        "vso.work_write": "Grants the ability to read, create, and update work items and queries, update board metadata, read area and iterations paths other work item tracking related metadata, execute queries, and to receive notifications about work item events via service hooks."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}